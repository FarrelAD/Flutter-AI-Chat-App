name: Build and Deploy Flutter Android App

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0   # ensure we can push back commits

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.5'
        channel: 'stable'
        
    - name: Check working directory and create .env
      run: |
        echo "Current working directory: $(pwd)"
        echo "Contents of current directory:"
        ls -la
        
        if [ ! -f ".env.example" ]; then
          echo ".env.example not found! Creating one..."
          echo "HUGGINGFACE_API_KEY=your_api_key" > .env.example
        fi
        
        echo "Contents of .env.example:"
        cat .env.example
        
        # Create .env file
        cp .env.example .env
        echo "Created .env file:"
        cat .env
        
        # Replace API key
        sed -i "s|your_api_key|${{ secrets.HUGGINGFACE_API_KEY }}|g" .env
        echo "Updated .env file:"
        cat .env
        
        # Verify file exists with full path
        echo "Checking if .env exists:"
        ls -la .env
        echo "Full path: $(pwd)/.env"

    - name: Bump Flutter build version
      run: |
        # Extract current version (format: x.y.z+build)
        current_version=$(grep '^version:' pubspec.yaml | sed 's/version: //')
        version_name=$(echo $current_version | cut -d+ -f1)
        build_number=$(echo $current_version | cut -d+ -f2)

        # Increment build number
        new_build_number=$((build_number + 1))
        new_version="$version_name+$new_build_number"

        # Replace in pubspec.yaml
        sed -i "s/version: .*/version: $new_version/" pubspec.yaml

        echo "Updated version to $new_version"

    - name: Commit updated version
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add pubspec.yaml
        git commit -m "chore: bump version [skip ci]" || echo "No changes to commit"
        git push origin HEAD:${{ github.ref }}

    - name: Get dependencies
      run: flutter pub get
      
    - name: Build APK
      run: flutter build apk --release
      
    - name: Upload APK to Firebase App Distribution
      uses: wzieba/Firebase-Distribution-Github-Action@v1
      with:
        appId: ${{ secrets.FIREBASE_APP_ID }}
        serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
        groups: ""
        file: build/app/outputs/flutter-apk/app-release.apk
        releaseNotes: |
          Changes in this build:
          ${{ github.event.head_commit.message }}
